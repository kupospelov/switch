<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="CannotOpen" xml:space="preserve">
    <value>Cannot open</value>
  </data>
  <data name="CannotSave" xml:space="preserve">
    <value>Cannot save</value>
  </data>
  <data name="ChangeAddress" xml:space="preserve">
    <value>Change address</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="ChoosePort" xml:space="preserve">
    <value>Choose port</value>
  </data>
  <data name="ClickOnDevice" xml:space="preserve">
    <value>Click on device</value>
  </data>
  <data name="PC" xml:space="preserve">
    <value>PC</value>
  </data>
  <data name="Computer" xml:space="preserve">
    <value>Computer</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="DefaultPort" xml:space="preserve">
    <value>Default port</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="LoadScheme" xml:space="preserve">
    <value>Load scheme</value>
  </data>
  <data name="NotChosen" xml:space="preserve">
    <value>Not chosen</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="NumberOfPorts" xml:space="preserve">
    <value>Number of ports</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SaveScheme" xml:space="preserve">
    <value>Save scheme</value>
  </data>
  <data name="SchemeFiles" xml:space="preserve">
    <value>Scheme files</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="STP" xml:space="preserve">
    <value>Spanning Tree Protocol</value>
  </data>
  <data name="Switch" xml:space="preserve">
    <value>Switch</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="FrameTransmission" xml:space="preserve">
    <value>Frame transmission</value>
  </data>
  <data name="RootSwitch" xml:space="preserve">
    <value>Root switch</value>
  </data>
  <data name="Blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Connection" xml:space="preserve">
    <value>Connection</value>
  </data>
  <data name="ConnectionSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="MacTable" xml:space="preserve">
    <value>Address table</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PortState" xml:space="preserve">
    <value>Port state</value>
  </data>
  <data name="ClearScheme" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="S100Mbps" xml:space="preserve">
    <value>100 Mbit/s</value>
  </data>
  <data name="S10Gbps" xml:space="preserve">
    <value>10 Gbit/s</value>
  </data>
  <data name="S10Mbps" xml:space="preserve">
    <value>10 Mbit/s</value>
  </data>
  <data name="S16Mbps" xml:space="preserve">
    <value>16 Mbit/s</value>
  </data>
  <data name="S1Gbps" xml:space="preserve">
    <value>1 Gbit/s</value>
  </data>
  <data name="S2Gbps" xml:space="preserve">
    <value>2 Gbit/s</value>
  </data>
  <data name="S4Mbps" xml:space="preserve">
    <value>4 Mbit/s</value>
  </data>
  <data name="Scheme" xml:space="preserve">
    <value>Scheme</value>
  </data>
  <data name="GenerateAddress" xml:space="preserve">
    <value>Generate address</value>
  </data>
  <data name="NotValidMacAddress" xml:space="preserve">
    <value>Not valid MAC address</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NotValidName" xml:space="preserve">
    <value>Invalid name</value>
  </data>
  <data name="ResetSelection" xml:space="preserve">
    <value>Reset selection</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="SendFrame" xml:space="preserve">
    <value>Send frame</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Computer Network Simulator</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>Basic OSI layer 2 network simulator

Konstantin Pospelov, 2015</value>
  </data>
  <data name="NoFreePortsToConnect" xml:space="preserve">
    <value>No free ports to connect</value>
  </data>
  <data name="Pointer" xml:space="preserve">
    <value>Pointer</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AgingTime" xml:space="preserve">
    <value>Aging time</value>
  </data>
  <data name="Inspires" xml:space="preserve">
    <value>Inspires</value>
  </data>
  <data name="s" xml:space="preserve">
    <value>s</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="h" xml:space="preserve">
    <value>h</value>
  </data>
  <data name="m" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="FiveMins" xml:space="preserve">
    <value>5m</value>
  </data>
  <data name="FiveSecs" xml:space="preserve">
    <value>5s</value>
  </data>
  <data name="OneMin" xml:space="preserve">
    <value>1m</value>
  </data>
  <data name="TenMins" xml:space="preserve">
    <value>10m</value>
  </data>
  <data name="ThirtySecs" xml:space="preserve">
    <value>30s</value>
  </data>
  <data name="TwoMins" xml:space="preserve">
    <value>2m</value>
  </data>
  <data name="StopTransmission" xml:space="preserve">
    <value>Stop frame transmission</value>
  </data>
  <data name="Frame" xml:space="preserve">
    <value>Frame</value>
  </data>
  <data name="FiveteenSecs" xml:space="preserve">
    <value>15s</value>
  </data>
  <data name="SaveSchemeAs" xml:space="preserve">
    <value>Save scheme as...</value>
  </data>
  <data name="CreateNewScheme" xml:space="preserve">
    <value>Create new scheme</value>
  </data>
  <data name="NewScheme" xml:space="preserve">
    <value>New scheme</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="SchemeChanged" xml:space="preserve">
    <value>Scheme was changed</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TransmittedFrames" xml:space="preserve">
    <value>Transmitted frames</value>
  </data>
  <data name="FrameAction" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="Forwarded" xml:space="preserve">
    <value>Forwarded</value>
  </data>
  <data name="Interval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="ms" xml:space="preserve">
    <value>ms</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="PauseTransmission" xml:space="preserve">
    <value>Pause frame transmission</value>
  </data>
  <data name="ResumeTransmission" xml:space="preserve">
    <value>Resume frame transmission</value>
  </data>
  <data name="Animation" xml:space="preserve">
    <value>Animation</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="InvalidAttribute" xml:space="preserve">
    <value>Invalid attribute</value>
  </data>
  <data name="DeviceWithHashCode" xml:space="preserve">
    <value>Device with hash code</value>
  </data>
  <data name="IsNotComputer" xml:space="preserve">
    <value>Is not a computer</value>
  </data>
  <data name="IsNotSwitch" xml:space="preserve">
    <value>Is not a switch</value>
  </data>
  <data name="PortNumberIsNotInSwitchRange" xml:space="preserve">
    <value>port number isn't in the switch range</value>
  </data>
  <data name="UnknownDeviceWithHashCode" xml:space="preserve">
    <value>Unknown device with hash code</value>
  </data>
</root>